<!--

    Copyright (C) 2010-2011 LShift Ltd.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->

<beans
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">


  <!--
    ========================
      Lifecycle Management
    ========================
  -->

  <bean id="notificationCentre" class="net.lshift.diffa.kernel.lifecycle.NotificationCentre" />
  <bean class="net.lshift.diffa.agent.context.AgentLifecycleHelper">
    <constructor-arg ref="notificationCentre" />
  </bean>

  <!--
    ============
      Sessions
    ============
  -->
  <bean id="differencesManager" class="net.lshift.diffa.kernel.differencing.DefaultDifferencesManager">
    <constructor-arg ref="systemConfigStore" />
    <constructor-arg ref="domainConfigStore" />
    <constructor-arg ref="domainDifferenceStore" />
    <constructor-arg ref="notificationCentre" />
    <constructor-arg ref="escalationManager" />
  </bean>

  <!-- NOTE that this explicit depends-on is required for sequence initialization -->

  <bean id="domainDifferenceStore" class="net.lshift.diffa.kernel.differencing.JooqDomainDifferenceStore" depends-on="diffaSessionFactory">
    <constructor-arg ref="jooqDatabaseFacade" />
    <constructor-arg ref="hazelcastCacheProvider" />
    <constructor-arg ref="idProvider" />
  </bean>

  <!-- register user preferences store as an event listener of the domain config store -->
  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetObject" ref="domainConfigStore" />
    <property name="targetMethod" value="registerPairEventListener" />
    <property name="arguments">
      <list>
        <ref bean="domainDifferenceStore"/>
      </list>
    </property>
  </bean>

  <bean id="sweeper" class="net.lshift.diffa.kernel.util.Sweeper" init-method="start" destroy-method="shutdown">
    <constructor-arg value="30" />
    <constructor-arg ref="domainDifferenceStore" />
  </bean>

  <!--
    =============================
      Escalations and Reporting
    =============================
  -->

  <bean id="escalationManager"
        class="net.lshift.diffa.kernel.escalation.EscalationManager"
        init-method="start"
        destroy-method="close">
    <constructor-arg ref="domainConfigStore" />
    <constructor-arg ref="systemConfigStore" />
    <constructor-arg ref="domainDifferenceStore" />
    <constructor-arg ref="reportManager" />
    <constructor-arg ref="breakerHelper" />
  </bean>

  <bean id="reportManager" class="net.lshift.diffa.kernel.reporting.ReportManager">
    <constructor-arg ref="domainConfigStore" />
    <constructor-arg ref="domainDifferenceStore" />
  </bean>




  <!--
    =============
      Frontends
    =============
  -->
  <bean id="configurationFrontend" class="net.lshift.diffa.kernel.frontend.Configuration">
    <constructor-arg ref="domainConfigStore"/>
    <constructor-arg ref="systemConfigStore"/>
    <constructor-arg ref="serviceLimitsStore"/>
    <constructor-arg ref="userPreferencesStore"/>
    <constructor-arg ref="differencesManager"/>
    <constructor-arg>
      <bean class="net.lshift.diffa.kernel.config.NoopEndpointLifecycleListener"/>
    </constructor-arg>
  </bean>
  <bean id="systemConfigurationFrontend" class="net.lshift.diffa.kernel.frontend.SystemConfiguration">
    <constructor-arg ref="systemConfigStore"/>
    <constructor-arg ref="serviceLimitsStore"/>
    <constructor-arg ref="differencesManager" />
    <constructor-arg ref="notificationCentre" />
    <constructor-arg ref="configurationFrontend" />
  </bean>


  <!--
    ========
      Data
    ========
  -->

  <bean id="hibernateDialect" class="org.springframework.jndi.JndiObjectFactoryBean">
    <property name="jndiName" value="java:comp/env/diffaHibernateDialect"/>
  </bean>

  <bean id="jooqDialect" class="org.springframework.jndi.JndiObjectFactoryBean">
    <property name="jndiName" value="java:comp/env/diffaJooqDialect"/>
  </bean>

  <bean id="jooqDatabaseFacade" class="net.lshift.diffa.schema.jooq.DatabaseFacade">
    <constructor-arg>
      <bean class="org.springframework.jndi.JndiObjectFactoryBean">
            <property name="jndiName" value="java:comp/env/jdbc/diffaDS"/>
      </bean>
    </constructor-arg>
    <constructor-arg ref="jooqDialect"/>
  </bean>

  <!-- Keep the Hibernate session factory around until the migration steps are ported away from Hibernate -->

  <bean id="diffaSessionFactory" class="net.lshift.diffa.agent.util.ListeningLocalSessionFactoryBean" lazy-init="false">
    <property name="dataSource">
      <bean class="org.springframework.jndi.JndiObjectFactoryBean">
            <property name="jndiName" value="java:comp/env/jdbc/diffaDS"/>
      </bean>
    </property>
    <property name="hibernateProperties">
      <bean class="net.lshift.diffa.agent.util.HibernatePropertiesFactory">
        <constructor-arg ref="hibernateDialect"/>
      </bean>
    </property>

    <property name="preparationSteps">
      <list>
        <bean class="net.lshift.diffa.schema.migrations.HibernateConfigStorePreparationStep" />
      </list>
    </property>
  </bean>

  <!--
    ===========
      Caching
    ===========
  -->

  <bean id="hazelcastCacheProvider" class="net.lshift.diffa.kernel.util.cache.HazelcastCacheProvider"></bean>

  <bean id="idProvider" class="net.lshift.diffa.kernel.util.DiffaIdProvider">
    <constructor-arg name="zookeeperCluster" value="localhost:2181" />
  </bean>

  <!--
    ===========
      Service Limiting
    ===========
  -->
  <bean id="changeEventRateLimiterFactory" class="net.lshift.diffa.kernel.limiting.ServiceLimitsDomainRateLimiterFactory">
      <constructor-arg ref="serviceLimitsStore" />
  </bean>

  <!--
    ===========
      Configuration
    ===========
  -->

  <bean id="underlyingConfigStore" class="net.lshift.diffa.kernel.config.system.JooqSystemConfigStore" depends-on="diffaSessionFactory">
    <constructor-arg ref="jooqDatabaseFacade" />
    <constructor-arg ref="hazelcastCacheProvider" />
    <constructor-arg ref="idProvider" />
  </bean>

  <!-- NOTE that this explicit depends-on is required for sequence initialization -->

  <bean id="domainConfigStore" class="net.lshift.diffa.kernel.config.JooqDomainConfigStore" depends-on="diffaSessionFactory">
    <constructor-arg ref="jooqDatabaseFacade" />
    <constructor-arg ref="hazelcastCacheProvider" />
    <constructor-arg ref="idProvider" />
    <constructor-arg ref="systemConfigStore" />
  </bean>

  <!-- register domain config store as an event listener of the system config store -->
  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetObject" ref="underlyingConfigStore" />
    <property name="targetMethod" value="registerDomainEventListener" />
    <property name="arguments">
      <list>
        <ref bean="domainConfigStore"/>
      </list>
    </property>
  </bean>

  <bean id="systemConfigStore" class="net.lshift.diffa.kernel.config.system.CachedSystemConfigStore">
    <constructor-arg ref="underlyingConfigStore" />
    <constructor-arg ref="hazelcastCacheProvider" />
  </bean>

  <bean id="underlyingServiceLimitsStore" class="net.lshift.diffa.kernel.config.JooqServiceLimitsStore">
    <constructor-arg ref="jooqDatabaseFacade" />
  </bean>

  <bean id="serviceLimitsStore" class="net.lshift.diffa.kernel.config.CachedServiceLimitsStore">
    <constructor-arg ref="underlyingServiceLimitsStore" />
    <constructor-arg ref="hazelcastCacheProvider" />
  </bean>

  <bean id="breakerHelper" class="net.lshift.diffa.kernel.config.BreakerHelper">
    <constructor-arg ref="domainConfigStore" />
  </bean>

  <!--
    ===========
      Scan Reporting
    ===========
  -->

  <bean id="scanActivityStore" class="net.lshift.diffa.kernel.scanning.JooqScanActivityStore">
    <constructor-arg ref="jooqDatabaseFacade" />
  </bean>

  <!--
    ===========
      User Preferences
    ===========
  -->

  <bean id="userPreferencesStore" class="net.lshift.diffa.kernel.preferences.JooqUserPreferencesStore">
    <constructor-arg ref="jooqDatabaseFacade" />
    <constructor-arg ref="hazelcastCacheProvider" />
  </bean>

  <!-- register user preferences store as an event listener of the domain config store -->
  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetObject" ref="domainConfigStore" />
    <property name="targetMethod" value="registerPairEventListener" />
    <property name="arguments">
      <list>
        <ref bean="userPreferencesStore"/>
      </list>
    </property>
  </bean>

  <!-- register user preferences store as an event listener of the system config store -->
  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetObject" ref="underlyingConfigStore" />
    <property name="targetMethod" value="registerDomainEventListener" />
    <property name="arguments">
      <list>
        <ref bean="userPreferencesStore"/>
      </list>
    </property>
  </bean>

  <!--
    ===========
      Credentials
    ===========
  -->

  <bean id="domainCredentialsStore" class="net.lshift.diffa.kernel.config.JooqDomainCredentialsStore">
    <constructor-arg ref="jooqDatabaseFacade" />
  </bean>




  <!--
      ========
        Boot the REST proxy
      ========
    -->
  <import resource="RESTful-context.xml"/>

</beans>
